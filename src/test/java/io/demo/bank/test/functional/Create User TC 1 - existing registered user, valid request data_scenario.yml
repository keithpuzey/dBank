

modules:
  nose:
    ignore-unknown-actions: true
execution:
  - executor: selenium
    scenario: Create User TC 1 - existing registered user, valid request data
    blazegrid: true
    iterations: 1
    capabilities:
      browserName: chrome

scenarios:
  Create User TC 1 - existing registered user, valid request data:
    follow-redirects: true
    requests:
      - url: '${BASE_URL}/api/v1/auth?username=admin@demo.io&password=Demo123!'
        method: POST
        label: 2. Authenticate API User
        headers:
          Content-Type: application/json
        assert:
         - contains:
           - '200'
           subject: http-code
           regexp: true
           assume-success: true
        extract-jsonpath:
          authToken: 'authToken'
      - url: '${BASE_URL}/api/v1/users'
        method: GET
        label: 3. Get Existing Email Address
        headers:
          Authorization: Bearer ${authToken}
          Content-Type: application/json
        assert:
         - contains:
           - '200'
           subject: http-code
           regexp: true
           assume-success: true
        extract-jsonpath:
          emailAddress: '$[0].userProfile.emailAddress'
      - url: '${BASE_URL}/api/v1/user?role=API'
        method: POST
        label: 4. Create API User
        headers:
          Authorization: Bearer ${authToken}
          Content-Type: application/json
        body: '{ "address": "RIO CRISTAL 1152 SANTITOS COLO", "country": "US", "dob": "12/12/1935", "emailAddress": "${emailAddress}", "firstName": "Ean", "gender": "M", "homePhone": "9029274941", "lastName": "Mathews", "locality": "Trenton", "mobilePhone": "", "password": "Demo123!", "postalCode": "08650", "region": "NJ", "ssn": "${__Random(100000000,999999999)}", "title": "Mr.", "workPhone": "" }'
        assert:
         - contains:
           - '406'
           subject: http-code
           regexp: true
           assume-success: true
